/*
PROBLEM
Given two strings s1 and s2, return the longest common subsequence of s1 and s2
(with longest common subsequence defined as the longest sequence of characters
such that all of them appear in both of the strings, possibly with other characters in between)
 EXAMPLES
    INPUT               OUTPUT
 "ABAZDC" "BACBAD"      "ABAD"
 "aaaa" "aa"            "aa"
 "AGGTAB" "GXTXAYB"     "GTAB"
 "" "ADASF"             ""
 */
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    String s1,s2,result,temp;
    result = new String();
    System.out.println("Type in first string");
    s1 = sc.nextLine();
    System.out.println("Type in second string");
    s2 = sc.nextLine();
    int i,j,ls2;
    //Make sure s1 is longer than s2
    if(s1.length()<s2.length()){temp=s1;s1=s2;s2=temp;}
    ls2 = s2.length();
    for(i=0;i<s1.length();i++)
    {
        for(j=0;j<s2.length();j++)
        {
            if(s1.charAt(i)==s2.charAt(j)){result = result+s1.charAt(i);i++;}
        }
        if(result.length()>=ls2)break;
    }
    if(result.length()>0)System.out.println("Result is "+result);
    else System.out.println("There were no common elements found");
    }
}
